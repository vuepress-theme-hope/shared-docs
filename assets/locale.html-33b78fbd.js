import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-103dd778.js";const e={},p=t(`<p>Locale related functions should be called at node side, you shall import them from <code>vuepress-shared/node</code> in node side code only.</p><p>The final locale should be passed in the client using <code>define</code> hook with only content in use.</p><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><h3 id="lang2pathconfig" tabindex="-1"><a class="header-anchor" href="#lang2pathconfig" aria-hidden="true">#</a> lang2PathConfig</h3><ul><li>Type: <code>Record&lt;string,string&gt;</code></li></ul><p>A &quot;lang code&quot; to &quot;locale path&quot; map.</p><h3 id="supportedlangs" tabindex="-1"><a class="header-anchor" href="#supportedlangs" aria-hidden="true">#</a> supportedLangs</h3><ul><li>Type: <code>string[]</code></li></ul><p>An array of languages that <code>vuepress-shared</code> knows it&#39;s locale path.</p><h3 id="path2langconfig" tabindex="-1"><a class="header-anchor" href="#path2langconfig" aria-hidden="true">#</a> path2langConfig</h3><ul><li>Type: <code>Record&lt;string,string&gt;</code></li></ul><p>A &quot;locale path&quot; to &quot;lang code&quot; map.</p><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><h3 id="path2lang" tabindex="-1"><a class="header-anchor" href="#path2lang" aria-hidden="true">#</a> path2Lang</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">path2Lang</span><span class="token operator">:</span> <span class="token punctuation">(</span>path<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> debug<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> HopeLang<span class="token punctuation">;</span>
</code></pre></div><p>Get language from path.</p><h3 id="lang2path" tabindex="-1"><a class="header-anchor" href="#lang2path" aria-hidden="true">#</a> lang2Path</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">lang2Path</span><span class="token operator">:</span> <span class="token punctuation">(</span>lang<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> debug<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><p>Get path from language</p><h3 id="getrootlang" tabindex="-1"><a class="header-anchor" href="#getrootlang" aria-hidden="true">#</a> getRootLang</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">lang2Path</span><span class="token operator">:</span> <span class="token punctuation">(</span>lang<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> debug<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><p>Get language of root directory</p><h3 id="getrootlangpath" tabindex="-1"><a class="header-anchor" href="#getrootlangpath" aria-hidden="true">#</a> getRootLangPath</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getRootLangPath</span><span class="token operator">:</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre></div><p>Get the inferred language path from root directory language</p><h3 id="getlocalepaths" tabindex="-1"><a class="header-anchor" href="#getlocalepaths" aria-hidden="true">#</a> getLocalePaths</h3><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getLocalePaths</span><span class="token operator">:</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><p>Get locale paths</p><h3 id="getlocale" tabindex="-1"><a class="header-anchor" href="#getlocale" aria-hidden="true">#</a> getLocale</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">GetLocalesOptions<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> LocaleData<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** VuePress Node app */</span>
  app<span class="token operator">:</span> App<span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** Default locale config */</span>
  <span class="token keyword">default</span><span class="token operator">:</span> RequiredLocaleConfig<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** user locale config */</span>
  config<span class="token operator">?</span><span class="token operator">:</span> LocaleConfig<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** plugin name */</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getLocales<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">LocaleData</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  options<span class="token operator">:</span> GetLocalesOptions<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> RequiredLocaleConfig<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Get final locale config for client.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>This is a useful utility function, and we recommend using this in every plugin which has client locale settings.</p><p>By using this, you can support as many locales as you like, while only pass necessary data to client.</p><p>E.g.:</p><p>With the following locales:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  locales<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;en-US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can get:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// fr is dropped and \`/\` get locale of \`/en/\`</span>
<span class="token comment">// user settings overrides default locale option</span>
<span class="token function">getLocales</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  app<span class="token punctuation">,</span>
  <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      a<span class="token operator">:</span> <span class="token string">&quot;一&quot;</span><span class="token punctuation">,</span>
      b<span class="token operator">:</span> <span class="token string">&quot;二&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/en/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      a<span class="token operator">:</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span>
      b<span class="token operator">:</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/fr/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      a<span class="token operator">:</span> <span class="token string">&quot;un&quot;</span><span class="token punctuation">,</span>
      b<span class="token operator">:</span> <span class="token string">&quot;deux&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  config<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      a<span class="token operator">:</span> <span class="token string">&quot;One&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      a<span class="token operator">:</span> <span class="token string">&quot;壹&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">//   &quot;/&quot;: {</span>
<span class="token comment">//     a: &quot;One&quot;,</span>
<span class="token comment">//     b: &quot;two&quot;,</span>
<span class="token comment">//   },</span>

<span class="token comment">//   &quot;/zh/&quot;: {</span>
<span class="token comment">//     a: &quot;壹&quot;,</span>
<span class="token comment">//     b: &quot;二&quot;,</span>
<span class="token comment">//   },</span>
<span class="token comment">// };</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,32),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","locale.html.vue"]]);export{d as default};
